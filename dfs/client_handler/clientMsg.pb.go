// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.14.0
// source: clientMsg.proto

package client_handler

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data                     []byte                            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Filename                 string                            `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Action                   string                            `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Checksum                 string                            `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Status                   string                            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Filesize                 int64                             `protobuf:"varint,6,opt,name=filesize,proto3" json:"filesize,omitempty"`
	Chunksize                int64                             `protobuf:"varint,7,opt,name=chunksize,proto3" json:"chunksize,omitempty"`
	ChunkDetails             map[string]string                 `protobuf:"bytes,8,rep,name=chunkDetails,proto3" json:"chunkDetails,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReplicaDetails           map[string]*ClientMsgReplicaNodes `protobuf:"bytes,9,rep,name=replicaDetails,proto3" json:"replicaDetails,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FileList                 []string                          `protobuf:"bytes,10,rep,name=fileList,proto3" json:"fileList,omitempty"`
	DiskSpaceMap             map[string]string                 `protobuf:"bytes,11,rep,name=diskSpaceMap,proto3" json:"diskSpaceMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsTextFile               bool                              `protobuf:"varint,12,opt,name=isTextFile,proto3" json:"isTextFile,omitempty"`
	ActiveNodes              []string                          `protobuf:"bytes,13,rep,name=activeNodes,proto3" json:"activeNodes,omitempty"`
	RequiredNoOfChunks       int64                             `protobuf:"varint,14,opt,name=requiredNoOfChunks,proto3" json:"requiredNoOfChunks,omitempty"`
	ReducerCount             int64                             `protobuf:"varint,15,opt,name=reducerCount,proto3" json:"reducerCount,omitempty"`
	ReducerList              []string                          `protobuf:"bytes,16,rep,name=reducerList,proto3" json:"reducerList,omitempty"`
	NonReducerList           []string                          `protobuf:"bytes,17,rep,name=nonReducerList,proto3" json:"nonReducerList,omitempty"`
	ActiveNodesCount         int64                             `protobuf:"varint,18,opt,name=activeNodesCount,proto3" json:"activeNodesCount,omitempty"`
	ReducedOutputMachineName string                            `protobuf:"bytes,19,opt,name=reducedOutputMachineName,proto3" json:"reducedOutputMachineName,omitempty"`
}

func (x *ClientMsg) Reset() {
	*x = ClientMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientMsg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMsg) ProtoMessage() {}

func (x *ClientMsg) ProtoReflect() protoreflect.Message {
	mi := &file_clientMsg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMsg.ProtoReflect.Descriptor instead.
func (*ClientMsg) Descriptor() ([]byte, []int) {
	return file_clientMsg_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMsg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ClientMsg) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ClientMsg) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ClientMsg) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *ClientMsg) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClientMsg) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *ClientMsg) GetChunksize() int64 {
	if x != nil {
		return x.Chunksize
	}
	return 0
}

func (x *ClientMsg) GetChunkDetails() map[string]string {
	if x != nil {
		return x.ChunkDetails
	}
	return nil
}

func (x *ClientMsg) GetReplicaDetails() map[string]*ClientMsgReplicaNodes {
	if x != nil {
		return x.ReplicaDetails
	}
	return nil
}

func (x *ClientMsg) GetFileList() []string {
	if x != nil {
		return x.FileList
	}
	return nil
}

func (x *ClientMsg) GetDiskSpaceMap() map[string]string {
	if x != nil {
		return x.DiskSpaceMap
	}
	return nil
}

func (x *ClientMsg) GetIsTextFile() bool {
	if x != nil {
		return x.IsTextFile
	}
	return false
}

func (x *ClientMsg) GetActiveNodes() []string {
	if x != nil {
		return x.ActiveNodes
	}
	return nil
}

func (x *ClientMsg) GetRequiredNoOfChunks() int64 {
	if x != nil {
		return x.RequiredNoOfChunks
	}
	return 0
}

func (x *ClientMsg) GetReducerCount() int64 {
	if x != nil {
		return x.ReducerCount
	}
	return 0
}

func (x *ClientMsg) GetReducerList() []string {
	if x != nil {
		return x.ReducerList
	}
	return nil
}

func (x *ClientMsg) GetNonReducerList() []string {
	if x != nil {
		return x.NonReducerList
	}
	return nil
}

func (x *ClientMsg) GetActiveNodesCount() int64 {
	if x != nil {
		return x.ActiveNodesCount
	}
	return 0
}

func (x *ClientMsg) GetReducedOutputMachineName() string {
	if x != nil {
		return x.ReducedOutputMachineName
	}
	return ""
}

type ClientMsgReplicaNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaList []string `protobuf:"bytes,1,rep,name=replicaList,proto3" json:"replicaList,omitempty"`
}

func (x *ClientMsgReplicaNodes) Reset() {
	*x = ClientMsgReplicaNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientMsg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMsgReplicaNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMsgReplicaNodes) ProtoMessage() {}

func (x *ClientMsgReplicaNodes) ProtoReflect() protoreflect.Message {
	mi := &file_clientMsg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMsgReplicaNodes.ProtoReflect.Descriptor instead.
func (*ClientMsgReplicaNodes) Descriptor() ([]byte, []int) {
	return file_clientMsg_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ClientMsgReplicaNodes) GetReplicaList() []string {
	if x != nil {
		return x.ReplicaList
	}
	return nil
}

var File_clientMsg_proto protoreflect.FileDescriptor

var file_clientMsg_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x81, 0x08, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x2e, 0x44, 0x69,
	0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x4f, 0x66, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x4f, 0x66, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x6f, 0x6e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x64,
	0x75, 0x63, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5a, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x30, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x3f, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_clientMsg_proto_rawDescOnce sync.Once
	file_clientMsg_proto_rawDescData = file_clientMsg_proto_rawDesc
)

func file_clientMsg_proto_rawDescGZIP() []byte {
	file_clientMsg_proto_rawDescOnce.Do(func() {
		file_clientMsg_proto_rawDescData = protoimpl.X.CompressGZIP(file_clientMsg_proto_rawDescData)
	})
	return file_clientMsg_proto_rawDescData
}

var file_clientMsg_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_clientMsg_proto_goTypes = []interface{}{
	(*ClientMsg)(nil),             // 0: clientMsg
	nil,                           // 1: clientMsg.ChunkDetailsEntry
	nil,                           // 2: clientMsg.ReplicaDetailsEntry
	(*ClientMsgReplicaNodes)(nil), // 3: clientMsg.replicaNodes
	nil,                           // 4: clientMsg.DiskSpaceMapEntry
}
var file_clientMsg_proto_depIdxs = []int32{
	1, // 0: clientMsg.chunkDetails:type_name -> clientMsg.ChunkDetailsEntry
	2, // 1: clientMsg.replicaDetails:type_name -> clientMsg.ReplicaDetailsEntry
	4, // 2: clientMsg.diskSpaceMap:type_name -> clientMsg.DiskSpaceMapEntry
	3, // 3: clientMsg.ReplicaDetailsEntry.value:type_name -> clientMsg.replicaNodes
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_clientMsg_proto_init() }
func file_clientMsg_proto_init() {
	if File_clientMsg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clientMsg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientMsg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMsgReplicaNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clientMsg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_clientMsg_proto_goTypes,
		DependencyIndexes: file_clientMsg_proto_depIdxs,
		MessageInfos:      file_clientMsg_proto_msgTypes,
	}.Build()
	File_clientMsg_proto = out.File
	file_clientMsg_proto_rawDesc = nil
	file_clientMsg_proto_goTypes = nil
	file_clientMsg_proto_depIdxs = nil
}
